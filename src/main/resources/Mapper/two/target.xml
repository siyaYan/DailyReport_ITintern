<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.dailyReport.Mapper.two.target">

    <resultMap id="attendTable" type="com.example.dailyReport.Bean.Attend">
        <!--column 字段 property 必须一致-->
        <!--<id column="attend_id" javaType="INTEGER"/>-->
        <result column="school_id" property="school_id" jdbcType="INTEGER"/>
        <result column="class_id" property="class_id" jdbcType="INTEGER"/>
        <result column="person_id" property="person_id" jdbcType="INTEGER"/>
        <result column="person_name" property="person_name" jdbcType="VARCHAR"/>
        <!-- <result column="position" property="position" jdbcType="VARCHAR"/>-->
        <result column="attend_status" property="attend_status" jdbcType="INTEGER"/>
        <result column="attend_time" property="attend_time" jdbcType="INTEGER"/>
    </resultMap>

    <resultMap id="abnormalClass" type="com.example.dailyReport.Bean.AttendAbnormal">
        <result column="class_name" property="class_name" jdbcType="VARCHAR"/>
        <result column="stage" property="stage" jdbcType="INTEGER"/>
        <result column="class_no" property="leave_sum" jdbcType="INTEGER"/>
    </resultMap>

    <select id="selectTypeSum" resultType="INTEGER">
            select count(*) from attend  where school_id=#{school_id} and class_id = #{class_id} and attend_status =#{type}
            and attend_time &gt;= ${date} and attend_time &lt; ${date}+86400
    </select>

    <select id="selectAbnormalClassId" resultType="INTEGER">
        select DISTINCT class_id from attend where school_id=#{school_id}  and attend_status !=0
            and attend_time &gt;= ${date} and attend_time &lt; ${date}+86400
    </select>

    <select id="selectAbnormalClass"   resultMap="abnormalClass">
            select class_name, stage,class_no
            from class where school_id=#{school_id}  and class_id = #{class_id}
    </select>

    <insert id="insertAttends"  useGeneratedKeys="true" keyColumn="attend_id" parameterType="java.util.List" >
        insert into attend(
        school_id,
        class_id,
        person_id,
        person_name,
        attend_status,
        attend_time)
        values
        <foreach collection="list" item="item" index="index" separator=",">
        (        #{item.school_id},#{
                item.class_id},#{
                item.person_id},#{
                item.person_name},#{
                item.attend_status},#{
                item.attend_time}
        )
        </foreach>
    </insert>

    <select id="selectClassIdByName" resultType="INTEGER">
        select class_id from class where class_name = #{param1} and stage = #{param2}
    </select>

    <select id="selectClassIdByPerson" resultType="INTEGER" parameterType="INTEGER">
        select class_id from person_class_relation where person_id = #{person_id}
    </select>
<!--refactor to add schoolId-->
    <select id="selectPersonByThirdNo" resultType="com.example.dailyReport.Bean.Person" parameterType="java.lang.String">
        select  person_id,
                person_type,
                third_no,
                real_name,
               school_id
        from person where third_no = #{third_no}
    </select>

    <select id="personNum" resultType="INTEGER" >
        select count(*) from person where school_id=#{school_id}  and person_type = #{type}
    </select>

    <select id="abnormalNum" resultType="INTEGER" >
        select count(*) from attend where school_id=#{school_id} and attend_status!=0
        and attend_time &gt;= #{date} and attend_time &lt; ${date}+86400
    </select>

    <!--Order by attend_time desc-->
    <select id="selectDayAttend" resultMap="attendTable">
        select
            school_id,
             class_id,
             person_id,
             person_name,
             attend_status,
             attend_time
        from attend where school_id=#{school_id}
        and attend_time &gt;= #{date} and attend_time &lt; ${date}+86400
        order by attend_time desc
    </select>

    <!--Consume-->
    <select id="selectDayConsume" resultType="INTEGER">
        select
            amount
        from consume where school_id=#{school_id} and type=#{type}
                      and consume_time &gt;= #{date} and consume_time &lt; ${date}+86400
    </select>

    <select id="selectConsumePlaces" resultType="java.lang.String">
    select  DISTINCT
            position
        from consume where school_id=#{school_id} and type=1
                       and consume_time &gt;= #{date} and consume_time &lt; ${date}+86400
    </select>

    <select id="countConsumePlace" resultType="INTEGER">
        select count(*)
        from consume where school_id=#{school_id} and type=1 and position=#{position}
        and consume_time &gt;= #{date} and consume_time &lt; ${date}+86400
    </select>

    <!-- teacher-->
    <select id="selectTeachers" resultType="com.example.dailyReport.Bean.Teacher">
        select DISTINCT teacher_id,teacher_name from course where school_id=#{school_id}
        <if test="date!=null">
            and start_time &gt;=#{date} and end_time &lt;${date}+86400
        </if>
    </select>

    <select id="countTeacherCourse" resultType="INTEGER">
        select count(*) from course where school_id=#{school_id} and teacher_id=#{teacher_id}
       <if test="date!=null">
           and start_time &gt;=#{date} and end_time &lt;${date}+86400
       </if>
    </select>
    <!--based on person_id-->
    <!--<select id="selectTeacherName" resultType="INTEGER">
        select real_name from person where school_id=#{school_id} and person_id=#{teacher_id}
        <if test="date!=null">
            and start_time &gt;=#{date} and end_time &lt;${date}+86400
        </if>
    </select>-->
    <!--subject-->
    <select id="selectSubjects" resultType="java.lang.String">
        select DISTINCT subject_name from course where school_id=#{school_id}
        <if test="date!=null">
            and start_time &gt;=#{date} and end_time &lt;${date}+86400
        </if>
    </select>

    <select id="selectSubjectTeachers" resultType="java.lang.String">
        select DISTINCT teacher_name from course where school_id=#{school_id} and subject_name=#{subject_name}
        <if test="date!=null">
            and start_time &gt;=#{date} and end_time &lt;${date}+86400
        </if>
    </select>

    <!--accessApi-->
    <select id="selectDayAccess" resultType="INTEGER">
        select count(*)
        from accessApi where school_id=#{school_id} and access_type=#{access_type}
                       and access_time &gt;= #{date} and access_time &lt; ${date}+86400
    </select>

    <!--thirdParty-->
    <insert id="insertWords" useGeneratedKeys="true" keyColumn="word_id" parameterType="java.util.List">
        insert into words(
            school_id,
            keyword,
            num)
        values
        <foreach collection="list" item="item" index="index" separator=",">
            (
             #{item.school_id},
             #{item.keyword},
             #{item.num}
            )
        </foreach>
    </insert>

    <insert id="insertConsumes" useGeneratedKeys="true" keyColumn="consume_id" parameterType="java.util.List">
        insert into consume(
        person_name,
        person_id,
        card_number,
        account,
        type,
        position,
        amount,
        consume_time,
        school_id)
        values
        <foreach collection="list" item="item" index="index" separator=",">
            (#{item.person_name},
             #{item.person_id},
             #{item.card_number},
             #{item.account},
             #{item.type},
             #{item.position},
             #{item.amount},
             #{item.consume_time},
            1
            )
        </foreach>
    </insert>

</mapper>